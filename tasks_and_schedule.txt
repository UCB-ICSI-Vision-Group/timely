Schedule (all Fridays)
---

18 Apr (wed)
- refactor
	- switch from ut.Table to pandas
	- get rid of include_diff and include_trun and just filter the ground truth
	- rename 'synthetic' to 'timely' everywhere
- understand the inference behavior: why linear? @tobi @sergey
- plots for inference error vs. time @tobi
- results for current system with modified class values @sergey
- finished implementation of "active classification" model @sergey

20 Apr
- run on PASCAL VOC 2011 (test on val)
- results with the GIST action @tobi
- optimized inference of marginals, with controlled caching and potentially regression approximation @tobi @sergey
- more results, whatever we need @tobi
- finished implementation of inverse RL to learn policy @sergey

27 Apr
- more proper entropy computation, probably by sampling @tobi
- LSPI? @sergey
- paper draft with the above things and tighter story/intro @sergey

4 May
- finished paper draft with the following improvements over eccv12:
	- active classification model baseline
	- modified class value results
	- discussion of inference time and tradeoffs
	- better entropy calculation
	- inverse RL from oracle to learn the policy
	- LSPI?

The next month will be determined by how good the above results are.
We will probably need to keep introducing features and improving the reinforcement learning, to make convincing claims about the optimal value function.

Further improvements if the results are otherwise good:
- separating actions into regions as well

11 May

18 May
- done

25 May

1 Jun


Tasks
---
### assorted
- check code with pylint and pyflakes
- write tests for all classes @sergey @tobi
- include values for object classes (reference some paper by Ashish if can find) @sergey
- code up LSPI @sergey
- code up 'ranking svm policy'
- include scene context action

#### window proposals
- speed up: profile code to see where the speed bottlenecks are. how can they be resolved?
- try using x_scaled instead of x_frac for window proposal statistics
#### window classifier
- port sub's code into scikits-learn
#### jumping windows
- ensure performance at published levels
- is VQ performance adequate? should be pretty fast